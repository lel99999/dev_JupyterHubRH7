---
## - debug:
##     msg: "{{ansible_distribution }}-{{ ansible_distribution_major_version}}"
## 
## - name: Setup virtual environment
## # include_vars: rhel_7.yml
##   when: "{{ ansible_distribution_major_version }} == 7"
##   tags:
##     - postgresql-server

- name: Install Python3 packages
  become: yes
  become_method: sudo
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - python3
    - python3-devel
    - python3-pip
    - python3-rpm-generators
    - python3-rpm-macros
    - python3-setuptools
    - python3-tkinter
    - python3-PyYAML

- name: Setup Virtual Environments 
  become: yes
  become_method: sudo
  shell: python3 -m venv /opt/jupyterhub/

- name: Install Jupyterhub and Jupyterlab
  become: yes
  become_method: sudo
  shell: "{{ item }}"
  with_items:
    - "/opt/jupyterhub/bin/python3 -m pip install wheel"
    - "/opt/jupyterhub/bin/python3 -m pip install --upgrade pip" # Fixes RustExtension error
    - "/opt/jupyterhub/bin/python3 -m pip install jupyterhub jupyterlab"
    - "/opt/jupyterhub/bin/python3 -m pip install ipywidgets"

- name: Install jupterlab dependencies
  become: yes
  become_method: sudo
  yum:
    name: "{{ item }}"
    state: latest
  with_items:
    - nodejs
    - npm

- name: Install node proxy
  become: yes
  become_method: sudo
# npm:
  community.general.npm:
    name: configurable-http-proxy
    global: yes
    state: present
# cmd: "/bin/npm install -g configurable-http-proxy"
# shell: /bin/npm install -g configurable-http-proxy
# cmd: "npm install -g configurable-http-proxy"

##########################################################
- name: Check directory if exists
  stat:
    path: /opt/jupyterhub/etc/jupyterhub
  register: jh_dir

- name: Make directory for configuration
  become: yes
  become_method: sudo
  file:
    path: /opt/jupyterhub/etc/jupyterhub
    state: directory
    mode: 0755
    group: root
    owner: root
#  cmd: "mkdir -p /opt/jupyterhub/etc/jupyterhub/"
  when: jh_dir.stat.exists == false

- name: Create configuration for JupyterHub
  become: yes
  become_method: sudo 
# cmd: "{{ item }}"
  shell: "{{ item }}"
  with_items:
    - "/opt/jupyterhub/bin/jupyterhub --generate-config"
#   - "mkdir -p /opt/jupyterhub/etc/jupyterhub/"
#   - "chdir=/opt/jupyterhub/etc/jupyter /opt/jupyterhub/bin/jupyterhub --generate-config"
  args:
    chdir: /opt/jupyterhub/etc/jupyter
  when: jh_dir.stat.exists == false

#- name: Generate config
#  become: yes
#  become_method: sudo 
#  cmd: "chdir=/opt/jupyterhub/etc/jupyter /opt/jupyterhub/bin/jupyterhub --generate-config"

####### Setup Systemd Service ########

- name: Check directory if exists
  stat:
    path: /opt/jupyterhub/etc/systemd
  register: jhsysd_dir

- name: Make directory for configuration
  become: yes
  become_method: sudo
  file:
    path: /opt/jupyterhub/etc/systemd
    state: directory
    mode: 0755
    group: root
    owner: root
  when: jhsysd_dir.stat.exists == false

- name: Create Service File
  become: yes
  become_method: sudo
  copy:
    dest: /opt/jupyterhub/etc/systemd/jupyterhub.service
    content: |
      [Unit]
      Description=JupyterHub
      After=syslog.target network.target
      
      [Service]
      User=root
      Environment="PATH=/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/opt/jupyterhub/bin"
      ExecStart=/opt/jupyterhub/bin/jupyterhub -f /opt/jupyterhub/etc/jupyterhub/jupyterhub_config.py
      
      [Install]
      WantedBy=multi-user.target 
  when: jhsysd_dir.stat.exists == false

- name: Create Symlink to Service
  become: yes
  become_method: sudo
  shell: ln -s /opt/jupyterhub/etc/systemd/jupyterhub.service /etc/systemd/system/jupyterhub.service

- name: Reload Configuration Files
  become: yes
  become_method: sudo
  shell: systemctl daemon-reload

- name: Enable Service
  become: yes
  become_method: sudo
  shell: systemctl enable jupyterhub.service

# include_vars: rhel_7.yml
# when: "{{ ansible_distribution_major_version }} == 7"
# tags:
#   - postgresql-server

